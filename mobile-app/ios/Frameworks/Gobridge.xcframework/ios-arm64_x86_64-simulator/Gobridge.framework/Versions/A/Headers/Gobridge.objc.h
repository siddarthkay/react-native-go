// Objective-C API for talking to github.com/example/go-react-native-backend Go package.
//   gobind -lang=objc github.com/example/go-react-native-backend
//
// File is generated by gobind. Do not edit.

#ifndef __Gobridge_H__
#define __Gobridge_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class GobridgeHTTPServer;
@class GobridgeJSONRPCError;
@class GobridgeJSONRPCRequest;
@class GobridgeJSONRPCResponse;
@class GobridgeMobileAPI;

/**
 * HTTPServer manages the local HTTP server
 */
@interface GobridgeHTTPServer : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewHTTPServer creates a new HTTP server instance
 */
- (nullable instancetype)init;
/**
 * GetPort returns the current server port
 */
- (long)getPort;
/**
 * StartServer starts the HTTP server on an available port
 */
- (BOOL)startServer:(long* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
/**
 * StopServer stops the HTTP server
 */
- (BOOL)stopServer:(NSError* _Nullable* _Nullable)error;
@end

/**
 * JSONRPCError represents a JSON-RPC 2.0 error
 */
@interface GobridgeJSONRPCError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long code;
@property (nonatomic) NSString* _Nonnull message;
// skipped field JSONRPCError.Data with unsupported type: interface{}

@end

/**
 * JSONRPCRequest represents a JSON-RPC 2.0 request
 */
@interface GobridgeJSONRPCRequest : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull jsonrpc;
@property (nonatomic) NSString* _Nonnull method;
// skipped field JSONRPCRequest.Params with unsupported type: interface{}

// skipped field JSONRPCRequest.ID with unsupported type: interface{}

@end

/**
 * JSONRPCResponse represents a JSON-RPC 2.0 response
 */
@interface GobridgeJSONRPCResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull jsonrpc;
// skipped field JSONRPCResponse.Result with unsupported type: interface{}

@property (nonatomic) GobridgeJSONRPCError* _Nullable error;
// skipped field JSONRPCResponse.ID with unsupported type: interface{}

@end

/**
 * MobileAPI is the main struct exposed to mobile apps
Only used for JSON-RPC server management
 */
@interface GobridgeMobileAPI : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewMobileAPI creates a new instance of MobileAPI
 */
- (nullable instancetype)init;
/**
 * GetServerPort returns the current JSON-RPC server port
 */
- (long)getServerPort;
/**
 * StartServer starts the HTTP JSON-RPC server and returns the port
 */
- (long)startServer;
/**
 * StopServer stops the HTTP JSON-RPC server
 */
- (void)stopServer;
@end

/**
 * GetHTTPServerPort returns the current server port
 */
FOUNDATION_EXPORT long GobridgeGetHTTPServerPort(void);

/**
 * NewHTTPServer creates a new HTTP server instance
 */
FOUNDATION_EXPORT GobridgeHTTPServer* _Nullable GobridgeNewHTTPServer(void);

/**
 * NewMobileAPI creates a new instance of MobileAPI
 */
FOUNDATION_EXPORT GobridgeMobileAPI* _Nullable GobridgeNewMobileAPI(void);

/**
 * StartHTTPServer starts the global HTTP server
 */
FOUNDATION_EXPORT long GobridgeStartHTTPServer(void);

/**
 * StopHTTPServer stops the global HTTP server
 */
FOUNDATION_EXPORT void GobridgeStopHTTPServer(void);

#endif
